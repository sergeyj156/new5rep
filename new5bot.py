import sqlite3
from datetime import datetime
import telebot
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardMarkup, KeyboardButton
import pandas as pd
from io import BytesIO

# Connect to SQLite database (or create it if it doesn't exist)
conn = sqlite3.connect('users.db', check_same_thread=False)
cursor = conn.cursor()

admin_ids = [679030634, 987654321]
user_classes = {}
# Create table to store user data
cursor.execute('''
CREATE TABLE IF NOT EXISTS users (
    user_id INTEGER PRIMARY KEY,
    class TEXT,
    phone_number TEXT,
    registration_time TEXT,
    referrer_id TEXT,
    user_name TEXT DEFAULT "unknown"
)
''')


conn.commit()
# –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
cursor.execute('''
CREATE TABLE IF NOT EXISTS sozvon (
    user_id INTEGER PRIMARY KEY
);
''')
conn.commit()

cursor.execute('''
CREATE TABLE IF NOT EXISTS kurs (
    user_id INTEGER PRIMARY KEY
);
''')
conn.commit()

cursor.execute('''
CREATE TABLE IF NOT EXISTS pobediteli (
    user_id INTEGER PRIMARY KEY
);
''')
conn.commit()




# Initialize the bot with your token
bot = telebot.TeleBot('6708762418:AAFEgHko1kjBUrbO77Xd_nUjVC9SuTi1x6A')

# Command to start the bot interaction
@bot.message_handler(commands=['start'])
def send_welcome(message):
    referral_id = None
    if len(message.text.split()) > 1:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ ID
        referral_id = message.text.split()[1]
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π ID –Ω–∞—à–∏–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º (–¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è)
            referrer_id = int(referral_id)  # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ int, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å SQL –∏–Ω—ä–µ–∫—Ü–∏–π
            with sqlite3.connect('users.db', check_same_thread=False) as conn:
                cursor = conn.cursor()
                cursor.execute('SELECT user_name FROM users WHERE user_id = ?', (referrer_id,))
                referrer = cursor.fetchone()
                if referrer:
                    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–º ID
                    registration_time = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
                    user_name = message.from_user.first_name + ' ' + (
                        message.from_user.last_name if message.from_user.last_name else '')
                    cursor.execute(
                        'INSERT OR IGNORE INTO users (user_id, class, phone_number, registration_time, user_name, referrer_id) VALUES (?, ?, ?, ?, ?, ?)',
                        (message.from_user.id, 'unknown', 'unknown', registration_time, user_name, referrer_id))
                    conn.commit()

                    # –ù–∞–≥—Ä–∞–¥–∞ –¥–ª—è –ø—Ä–∏–≥–ª–∞—Å–∏–≤—à–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ –µ—â–µ —Ä–∞–∑ –≤ —Ç–∞–±–ª–∏—Ü—É
                    cursor.execute(
                        'INSERT OR IGNORE INTO users (user_id, class, phone_number, registration_time, user_name, referrer_id) VALUES (?, ?, ?, ?, ?, ?)',
                        (referrer_id, 'unknown', 'unknown', registration_time, referrer[0], None))
                    conn.commit()

                    # –°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
                    bot.send_message(message.chat.id,
                                     "–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã! –°–ø–∞—Å–∏–±–æ –∑–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –æ—Ç –≤–∞—à–µ–≥–æ –¥—Ä—É–≥–∞!")
        except ValueError:
            # –ï—Å–ª–∏ referral_id –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —á–∏—Å–ª–æ–º, –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º –µ–≥–æ
            pass # –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è –Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–¥–µ–ª–∏–ª—Å—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–æ–π

    markup = InlineKeyboardMarkup()
    markup.row_width = 2
    markup.add(InlineKeyboardButton("11 –∫–ª–∞—Å—Å (–ï–ì–≠ 2024)", callback_data="11"),
               InlineKeyboardButton("10 –∫–ª–∞—Å—Å (–ï–ì–≠ 2025)", callback_data="10"),
               InlineKeyboardButton("9 –∫–ª–∞—Å—Å (–û–ì–≠ 2024)", callback_data="9"),
               InlineKeyboardButton("8 –∫–ª–∞—Å—Å –∏ –Ω–∏–∂–µ (–û–ì–≠ 2025)", callback_data="8"))

    # –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É —Ñ–æ—Ç–æ
    photo_path = 'priv.png'
    with open(photo_path, 'rb') as photo:
        bot.send_photo(message.chat.id, photo,
                       caption="–ü—Ä–∏–≤–µ—Ç! üëã\n\n–≠—Ç–æ –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç –Ω–∞–º –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–±—è –Ω–∞ —Ä–æ–∑—ã–≥—Ä—ã—à!")

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
    bot.send_message(message.chat.id, "–î–ª—è –Ω–∞—á–∞–ª–∞, –≤—ã–±–µ—Ä–∏ –≤ –∫–∞–∫–æ–º —Ç—ã –∫–ª–∞—Å—Å–µ üëá", reply_markup=markup)
# Handler for class selection
@bot.callback_query_handler(func=lambda call: call.data in ["11", "10", "9", "8"])
def query_handler(call):
    bot.answer_callback_query(callback_query_id=call.id)
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ callback_data, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å, –∫–∞–∫—É—é –∫–Ω–æ–ø–∫—É –Ω–∞–∂–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    class_selected = call.data
    # –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö, –∑–∞–ø–∏—Å—ã–≤–∞—è –µ–≥–æ –∫–ª–∞—Å—Å
    user_id = call.from_user.id
    cursor.execute('UPDATE users SET class = ? WHERE user_id = ?', (class_selected, user_id))
    conn.commit()
    # –£–¥–∞–ª—è–µ–º –∫–Ω–æ–ø–∫–∏, –æ—Ç–ø—Ä–∞–≤–ª—è—è –ø—É—Å—Ç—É—é —Ä–∞–∑–º–µ—Ç–∫—É
    bot.delete_message(call.message.chat.id, call.message.message_id)
     # –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Å –∑–∞–ø—Ä–æ—Å–æ–º –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
    bot.send_message(call.message.chat.id, '–°—É–ø–µ—Ä! –¢–∞–∫–∂–µ –Ω–∞–º –Ω—É–∂–µ–Ω –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞, —á—Ç–æ–±—ã –º—ã –º–æ–≥–ª–∏ —Å–≤—è–∑–∞—Ç—å—Å—è —Å —Ç–æ–±–æ–π, –µ—Å–ª–∏ —Ç—ã –≤—ã–∏–≥—Ä–∞–µ—à—å ü•≥\n\n–ù–∞–∂–º–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –∫–Ω–æ–ø–∫—É ¬´–û—Å—Ç–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–∞–Ω¬ªüì±', reply_markup=phone_number_request())


# Request for user's phone number

def phone_number_request():
    markup = ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
    button_phone = KeyboardButton(text="–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞", request_contact=True)
    markup.add(button_phone)
    return markup

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏
def generate_referral_link(user_id):
    return f"https://t.me/testoviy56_bot?start={user_id}"

def send_invite_message(chat_id):
    markup = InlineKeyboardMarkup()
    invite_button = InlineKeyboardButton("–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞", callback_data="send_invite_message")
    markup.add(invite_button)
    bot.send_message(chat_id, "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ!\n\n–¢–µ–ø–µ—Ä—å —Ç—ã –µ—Å—Ç—å –≤ —Å–ø–∏—Å–∫–µ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤, —Å—Ä–µ–¥–∏ –∫–æ—Ç–æ—Ä—ã—Ö –º—ã –±—É–¥–µ–º —Ä–∞–∑—ã–≥—Ä—ã–≤–∞—Ç—å –ø—Ä–∏–∑—ã –≤ –ø—Ä—è–º–æ–º —ç—Ñ–∏—Ä–µ 27 –∞–ø—Ä–µ–ª—è –≤ 14:00 –ø–æ –º—Å–∫ üî•\n\n–ß—Ç–æ —Ç—ã —Å–º–æ–∂–µ—à—å –≤—ã–∏–≥—Ä–∞—Ç—å?\n‚Äî –°–æ–∑–≤–æ–Ω —Å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–º (10 –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π). \n‚Äî –ú–µ—Å—Ç–æ –Ω–∞ –∏–Ω—Ç–µ–Ω—Å–∏–≤–µ ¬´–ú—è—Å–æ—Ä—É–±–∫–∞¬ª (33 –ø–æ–±–µ–¥–∏—Ç–µ–ª—è).\n\n–ü—Ä–∏—Ö–æ–¥–∏ –Ω–∞ —ç—Ñ–∏—Ä ¬´–ö–∞–∫ –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å—Å—è –∫ –û–ì–≠ –∑–∞ –Ω–µ–¥–µ–ª—é?¬ª, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å, –∫—Ç–æ –∑–∞–±–µ—Ä—ë—Ç –ø—Ä–∏–∑—ã –æ—Ç ¬´100–±–∞–ª–ª—å–Ω–æ–≥–æ¬ª, –∞ –µ—â—ë:\n‚Äî –∫–∞–∫–æ–≤–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–¥–∞—é—â–∏—Ö –û–ì–≠ –∏ —á—Ç–æ –Ω–∞ –Ω–µ—ë –≤–ª–∏—è–µ—Ç;\n‚Äî –∫–∞–∫ –ø–æ–±–æ—Ä–æ—Ç—å –í–°–ï —Å—Ç—Ä–∞—Ö–∏ –ø–µ—Ä–µ–¥ –û–ì–≠; \n‚Äî –ø—Ä–∞–≤–¥–∞ –ª–∏, —á—Ç–æ –º–æ–∂–Ω–æ –≤–∑—è—Ç—å –æ—Ç–≤–µ—Ç—ã –Ω–∞ –û–ì–≠, –∏ –≥–¥–µ; \n‚Äî —á—Ç–æ —Ç–∞–∫–æ–µ ¬´–ú—è—Å–æ—Ä—É–±–∫–∞¬ª, –∏ –∫–∞–∫ –æ–Ω–∞ –ø–æ–º–æ–∂–µ—Ç –∑–∞—Ç–∞—â–∏—Ç—å —ç–∫–∑–∞–º–µ–Ω—ã –Ω–∞ 5.\n\n–ù–æ –µ—Å–ª–∏ —Ö–æ—á–µ—à—å —É–≤–µ–ª–∏—á–∏—Ç—å —Å–≤–æ–∏ —à–∞–Ω—Å—ã –Ω–∞ –ø–æ–±–µ–¥—É, —Ç–æ –ø—Ä–∏–≥–ª–∞—à–∞–π –Ω–∞ —Ç—Ä–∞–Ω—Å–ª—è—Ü–∏—é –¥—Ä—É–∑–µ–π!\n\n–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç: —Å–∫–æ–ª—å–∫–æ –¥—Ä—É–∑–µ–π –ø—Ä–∏–≥–ª–∞—Å–∏—à—å –Ω–∞ —Ç—Ä–∞–Ω—Å–ª—è—Ü–∏—é, —Å—Ç–æ–ª—å–∫–æ —Ä–∞–∑ —Ç–≤–æ—ë –∏–º—è –ø–æ–ø–∞–¥—ë—Ç –≤ —Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤, —É–≤–µ–ª–∏—á–∏–≤–∞—è —à–∞–Ω—Å—ã –Ω–∞ –ø–æ–±–µ–¥—É!\n\n–ß—Ç–æ–±—ã –º—ã –º–æ–≥–ª–∏ –ø–æ–Ω—è—Ç—å, —á—Ç–æ –¥—Ä—É–≥ –ø—Ä–∏—à—ë–ª –∏–º–µ–Ω–Ω–æ –æ—Ç —Ç–µ–±—è, –∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ.", reply_markup=markup)

@bot.callback_query_handler(func=lambda call: call.data == "send_invite_message")
def handle_invite_callback(call):
    bot.answer_callback_query(call.id)
    # –°—Å—ã–ª–∫–∞ –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è
    referral_link = generate_referral_link(call.from_user.id)  # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏
    text = f"–õ–æ–≤–∏! –≠—Ç–æ —É–Ω–∏–∫–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞, –ø–æ –∫–æ—Ç–æ—Ä–æ–π —Ç—ã –º–æ–∂–µ—à—å –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞ –Ω–∞ —Ç—Ä–∞–Ω—Å–ª—è—Ü–∏—é:\n\n{referral_link}\n\n–ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å –µ–º—É —Å—Å—ã–ª–∫—É, —á—Ç–æ–±—ã –æ–Ω –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è –Ω–∞ —ç—Ñ–∏—Ä, –∏ —Ç–≤–æ—ë –∏–º—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–æ–±–∞–≤–∏—Ç—Å—è –≤ —Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –µ—â—ë —Ä–∞–∑ üíú"
    photo_path = 'ref.png'
    with open(photo_path, 'rb') as photo:
        bot.send_photo(call.message.chat.id, photo=photo, caption=text)
# Handler for receiving contact information
@bot.message_handler(content_types=['contact'])
def contact_handler(message):
    user_id = message.from_user.id
    phone_number = message.contact.phone_number
    user_name = message.from_user.first_name
    if message.from_user.last_name:
        user_name += ' ' + message.from_user.last_name
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–ª–∞—Å—Å–µ –∏–∑ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    class_info = user_classes.get(user_id, 'unknown')  # –ï—Å–ª–∏ –∫–ª–∞—Å—Å –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º 'unknown'
    registration_time = datetime.now().strftime("%Y-%m-%d %H:%M:%S")

    # –î–∞–ª–µ–µ –∏–¥–µ—Ç –∫–æ–¥ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    with sqlite3.connect('users.db', check_same_thread=False) as conn:
        cursor = conn.cursor()
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        cursor.execute('SELECT user_id FROM users WHERE user_id = ?', (user_id,))
        if cursor.fetchone() is None:
            # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç, –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ
            cursor.execute(
                'INSERT INTO users (user_id, class, phone_number, registration_time, user_name, referrer_id) VALUES (?, ?, ?, ?, ?, ?)',
                (user_id, class_info, phone_number, registration_time, user_name, None))
        else:
            # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –æ–±–Ω–æ–≤–ª—è–µ–º –µ–≥–æ –¥–∞–Ω–Ω—ã–µ
            cursor.execute(
                'UPDATE users SET class = ?, phone_number = ?, user_name = ? WHERE user_id = ?',
                (class_info, phone_number, user_name, user_id))
        conn.commit()




    # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç–∞ —Å –∑–∞–ø—Ä–æ—Å–æ–º –Ω–æ–º–µ—Ä–∞
    bot.delete_message(message.chat.id, message.message_id - 1)
    bot.delete_message(message.chat.id, message.message_id)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≥–ª–∞—Å–∏—Ç–µ–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    send_invite_message(message.chat.id)



    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–æ–π
   # referral_link = generate_referral_link(user_id)
   # bot.send_message(message.chat.id, f"–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ!\n\n–¢–µ–ø–µ—Ä—å —Ç—ã –µ—Å—Ç—å –≤ —Å–ø–∏—Å–∫–µ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤, —Å—Ä–µ–¥–∏ –∫–æ—Ç–æ—Ä—ã—Ö –º—ã –±—É–¥–µ–º —Ä–∞–∑—ã–≥—Ä—ã–≤–∞—Ç—å –ø—Ä–∏–∑—ã –≤ –ø—Ä—è–º–æ–º —ç—Ñ–∏—Ä–µ 27 –∞–ø—Ä–µ–ª—è –≤ 14:00 –ø–æ –º—Å–∫ üî•\n\n–ß—Ç–æ —Ç—ã —Å–º–æ–∂–µ—à—å –≤—ã–∏–≥—Ä–∞—Ç—å?\n‚Äî –°–æ–∑–≤–æ–Ω —Å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–º (10 –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π). \n‚Äî –ú–µ—Å—Ç–æ –Ω–∞ –∏–Ω—Ç–µ–Ω—Å–∏–≤–µ ¬´–ú—è—Å–æ—Ä—É–±–∫–∞¬ª (33 –ø–æ–±–µ–¥–∏—Ç–µ–ª—è).\n\n–ü—Ä–∏—Ö–æ–¥–∏ –Ω–∞ —ç—Ñ–∏—Ä ¬´–ö–∞–∫ –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å—Å—è –∫ –û–ì–≠ –∑–∞ –Ω–µ–¥–µ–ª—é?¬ª, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å, –∫—Ç–æ –∑–∞–±–µ—Ä—ë—Ç –ø—Ä–∏–∑—ã –æ—Ç ¬´100–±–∞–ª–ª—å–Ω–æ–≥–æ¬ª, –∞ –µ—â—ë:\n‚Äî –∫–∞–∫–æ–≤–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–¥–∞—é—â–∏—Ö –û–ì–≠ –∏ —á—Ç–æ –Ω–∞ –Ω–µ—ë –≤–ª–∏—è–µ—Ç;\n‚Äî –∫–∞–∫ –ø–æ–±–æ—Ä–æ—Ç—å –í–°–ï —Å—Ç—Ä–∞—Ö–∏ –ø–µ—Ä–µ–¥ –û–ì–≠; \n‚Äî –ø—Ä–∞–≤–¥–∞ –ª–∏, —á—Ç–æ –º–æ–∂–Ω–æ –≤–∑—è—Ç—å –æ—Ç–≤–µ—Ç—ã –Ω–∞ –û–ì–≠, –∏ –≥–¥–µ; \n‚Äî —á—Ç–æ —Ç–∞–∫–æ–µ ¬´–ú—è—Å–æ—Ä—É–±–∫–∞¬ª, –∏ –∫–∞–∫ –æ–Ω–∞ –ø–æ–º–æ–∂–µ—Ç –∑–∞—Ç–∞—â–∏—Ç—å —ç–∫–∑–∞–º–µ–Ω—ã –Ω–∞ 5.\n\n–ù–æ –µ—Å–ª–∏ —Ö–æ—á–µ—à—å —É–≤–µ–ª–∏—á–∏—Ç—å —Å–≤–æ–∏ —à–∞–Ω—Å—ã –Ω–∞ –ø–æ–±–µ–¥—É, —Ç–æ –ø—Ä–∏–≥–ª–∞—à–∞–π –Ω–∞ —Ç—Ä–∞–Ω—Å–ª—è—Ü–∏—é –¥—Ä—É–∑–µ–π!\n\n–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç: —Å–∫–æ–ª—å–∫–æ –¥—Ä—É–∑–µ–π –ø—Ä–∏–≥–ª–∞—Å–∏—à—å –Ω–∞ —Ç—Ä–∞–Ω—Å–ª—è—Ü–∏—é, —Å—Ç–æ–ª—å–∫–æ —Ä–∞–∑ —Ç–≤–æ—ë –∏–º—è –ø–æ–ø–∞–¥—ë—Ç –≤ —Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤, —É–≤–µ–ª–∏—á–∏–≤–∞—è —à–∞–Ω—Å—ã –Ω–∞ –ø–æ–±–µ–¥—É!\n\n–ß—Ç–æ–±—ã –º—ã –º–æ–≥–ª–∏ –ø–æ–Ω—è—Ç—å, —á—Ç–æ –¥—Ä—É–≥ –ø—Ä–∏—à—ë–ª –∏–º–µ–Ω–Ω–æ –æ—Ç —Ç–µ–±—è, –∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ. \n\n–¢–≤–æ—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞: {referral_link}")

def generate_referral_link(user_id):
    # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –ª–æ–≥–∏–∫—É –≤–∞—à–µ–π —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏
    return f"https://t.me/testoviy56_bot?start={user_id}"

# Admin command to dump all users' data
@bot.message_handler(commands=['dump_users'])
def dump_users(message):
    user_id = message.from_user.id
    if user_id in admin_ids:
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        with sqlite3.connect('users.db', check_same_thread=False) as conn:
            cursor = conn.cursor()
            cursor.execute('SELECT * FROM users')
            users_data = cursor.fetchall()

        # –°–æ–∑–¥–∞–µ–º DataFrame
        df = pd.DataFrame(users_data, columns=['ID', 'Class', 'Phone', 'Registered', 'Name', 'Referrer ID'])  # –î–æ–±–∞–≤–ª–µ–Ω Referrer ID

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º DataFrame –≤ —Ñ–∞–π–ª Excel
        excel_file = BytesIO()
        with pd.ExcelWriter(excel_file, engine='openpyxl') as writer:
            df.to_excel(writer, index=False, sheet_name='Users')

        # –ü–µ—Ä–µ–º–∞—Ç—ã–≤–∞–µ–º –Ω–∞ –Ω–∞—á–∞–ª–æ —Ñ–∞–π–ª–∞ –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π
        excel_file.seek(0)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∞–π–ª
        bot.send_document(message.chat.id, (
        'users_data.xlsx', excel_file, 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'))
    else:
        bot.send_message(message.chat.id, "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
# Comment out the following line before deploying the code to avoid running the bot during development
# bot.polling()

@bot.message_handler(commands=['broadcast'])
def handle_broadcast(message):
    user_id = message.from_user.id
    if user_id in admin_ids:
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –∞–¥–º–∏–Ω–∞, –∫–æ—Ç–æ—Ä—ã–π –Ω–∞—á–∞–ª —Ä–∞—Å—Å—ã–ª–∫—É
        admin_chat_id = message.chat.id
        msg = bot.send_message(admin_chat_id, "–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏:")
        bot.register_next_step_handler(msg, send_broadcast)
    else:
        bot.send_message(message.chat.id, "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")

def send_broadcast(message):
    text = message.text
    with sqlite3.connect('users.db', check_same_thread=False) as conn:
        cursor = conn.cursor()
        cursor.execute('SELECT user_id FROM users')
        user_ids = cursor.fetchall()
        for user_id in user_ids:
            try:
                bot.send_message(user_id[0], text)
            except Exception as e:
                print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id[0]}: {e}")

    bot.send_message(message.chat.id, "–°–æ–æ–±—â–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã.")

@bot.message_handler(commands=['custom_broadcast'])
def custom_broadcast_init(message):
    user_id = message.from_user.id
    if user_id in admin_ids:
        msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é:")
        bot.register_next_step_handler(msg, custom_broadcast_get_text)
    else:
        bot.send_message(message.chat.id, "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")

def custom_broadcast_get_text(message):
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤–≤–µ–¥–µ–Ω–Ω—ã–µ ID –≤ –≤—Ä–µ–º–µ–Ω–Ω—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
    global temp_user_ids
    temp_user_ids = message.text.split(',')
    msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏:")
    bot.register_next_step_handler(msg, send_custom_broadcast)

def send_custom_broadcast(message):
    text = message.text
    failed_users = []
    for user_id in temp_user_ids:
        try:
            bot.send_message(int(user_id.strip()), text)
        except Exception as e:
            failed_users.append(user_id)
            print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}: {e}")

    if failed_users:
        bot.send_message(message.chat.id, f"–°–æ–æ–±—â–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã, –Ω–æ –Ω–µ —É–¥–∞–ª–æ—Å—å –¥–æ—Å—Ç–∞–≤–∏—Ç—å —Å–ª–µ–¥—É—é—â–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º: {', '.join(failed_users)}")
    else:
        bot.send_message(message.chat.id, "–í—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã.")

@bot.message_handler(commands=['add_to_sozvon'])
def add_to_sozvon(message):
    if message.from_user.id in admin_ids:
        msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ '–°–æ–∑–≤–æ–Ω':")
        bot.register_next_step_handler(msg, process_adding_to_sozvon)
    else:
        bot.send_message(message.chat.id, "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")

def process_adding_to_sozvon(message):
    user_id = int(message.text.strip())
    with sqlite3.connect('users.db', check_same_thread=False) as conn:
        cursor = conn.cursor()
        cursor.execute("INSERT OR IGNORE INTO sozvon (user_id) VALUES (?)", (user_id,))
        conn.commit()
    bot.send_message(message.chat.id, "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–±–∞–≤–ª–µ–Ω –≤ '–°–æ–∑–≤–æ–Ω'.")

@bot.message_handler(commands=['add_to_kurs'])
def add_to_kurs(message):
    if message.from_user.id in admin_ids:
        msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ '–ö—É—Ä—Å':")
        bot.register_next_step_handler(msg, process_adding_to_kurs)
    else:
        bot.send_message(message.chat.id, "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")

def process_adding_to_kurs(message):
    user_id = int(message.text.strip())
    with sqlite3.connect('users.db', check_same_thread=False) as conn:
        cursor = conn.cursor()
        cursor.execute("INSERT OR IGNORE INTO kurs (user_id) VALUES (?)", (user_id,))
        conn.commit()
    bot.send_message(message.chat.id, "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–±–∞–≤–ª–µ–Ω –≤ '–ö—É—Ä—Å'.")

@bot.message_handler(func=lambda message: message.text.lower() == "—Å–ª–æ–Ω")
def add_to_pobediteli(message):
    with sqlite3.connect('users.db', check_same_thread=False) as conn:
        cursor = conn.cursor()
        cursor.execute("SELECT 1 FROM sozvon WHERE user_id = ? UNION SELECT 1 FROM kurs WHERE user_id = ?", (message.from_user.id, message.from_user.id))
        if cursor.fetchone():
            cursor.execute("INSERT OR IGNORE INTO pobediteli (user_id) VALUES (?)", (message.from_user.id,))
            conn.commit()
            bot.send_message(message.chat.id, "–í—ã –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ —Å–ø–∏—Å–æ–∫ '–ü–æ–±–µ–¥–∏—Ç–µ–ª–∏'.")
        else:
            bot.send_message(message.chat.id, "–í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ '–°–æ–∑–≤–æ–Ω' –∏–ª–∏ '–ö—É—Ä—Å'.")

@bot.message_handler(commands=['dump_pobediteli'])
def dump_pobediteli(message):
    if message.from_user.id in admin_ids:
        with sqlite3.connect('users.db', check_same_thread=False) as conn:
            cursor = conn.cursor()
            cursor.execute("SELECT user_id FROM pobediteli")
            pobediteli_data = cursor.fetchall()
            df = pd.DataFrame(pobediteli_data, columns=['User ID'])
            excel_file = BytesIO()
            with pd.ExcelWriter(excel_file, engine='openpyxl') as writer:
                df.to_excel(writer, index=False, sheet_name='Pobediteli')
            excel_file.seek(0)
            bot.send_document(message.chat.id, ('pobediteli.xlsx', excel_file, 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'))
    else:
        bot.send_message(message.chat.id, "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")


bot.polling(none_stop=True)
